--------------------
./configure
Mon Feb 18 14:38:31 CET 2013

Checking for gcc...
=== ztest16867.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c -O3 ztest16867.c
... using gcc

Checking for shared library support...
=== ztest16867.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest16867.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.7 -O3 -fPIC -o ztest16867.dylib ztest16867.o
Building shared library libz.1.2.7.dylib with gcc.


=== ztest16867.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16867.c
ztest16867.c:2: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘dummy’
(exit code 1)
Checking for off64_t... No.

=== ztest16867.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest16867 ztest16867.c
Checking for fseeko... Yes.

=== ztest16867.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest16867 ztest16867.c
Checking for strerror... Yes.

=== ztest16867.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest16867.c
Checking for unistd.h... Yes.

=== ztest16867.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest16867.c
Checking for stdarg.h... Yes.

=== ztest16867.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest16867.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest16867.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest16867 ztest16867.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest16867.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest16867.c
Checking for return value of vsnprintf()... Yes.

=== ztest16867.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest16867.c
Checking for attribute(visibility) support... Yes.

=== ztest16867.c ===
#include <stdio.h>
#define is32(n,t) for(n=1,k=0;n;n<<=1,k++);if(k==32){puts(t);return 0;}
int main() {
    int k;
    unsigned i;
    unsigned long l;
    unsigned short s;
    is32(i, "unsigned")
    is32(l, "unsigned long")
    is32(s, "unsigned short")
    return 1;
}
===
gcc -O3 -DHAVE_HIDDEN ztest16867.c -o ztest16867
Looking for a four-byte integer type... Found.

ALL = static shared
AR = /usr/bin/libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.7
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.7.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.7
Z_U4 = unsigned
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure
Tue Feb 19 17:43:24 CET 2013

Checking for gcc...
=== ztest99817.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c -O3 ztest99817.c
... using gcc

Checking for shared library support...
=== ztest99817.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest99817.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.7 -O3 -fPIC -o ztest99817.dylib ztest99817.o
Building shared library libz.1.2.7.dylib with gcc.


=== ztest99817.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest99817.c
ztest99817.c:2: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘dummy’
(exit code 1)
Checking for off64_t... No.

=== ztest99817.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest99817 ztest99817.c
Checking for fseeko... Yes.

=== ztest99817.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest99817 ztest99817.c
Checking for strerror... Yes.

=== ztest99817.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest99817.c
Checking for unistd.h... Yes.

=== ztest99817.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest99817.c
Checking for stdarg.h... Yes.

=== ztest99817.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest99817.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest99817.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest99817 ztest99817.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest99817.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest99817.c
Checking for return value of vsnprintf()... Yes.

=== ztest99817.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest99817.c
Checking for attribute(visibility) support... Yes.

=== ztest99817.c ===
#include <stdio.h>
#define is32(n,t) for(n=1,k=0;n;n<<=1,k++);if(k==32){puts(t);return 0;}
int main() {
    int k;
    unsigned i;
    unsigned long l;
    unsigned short s;
    is32(i, "unsigned")
    is32(l, "unsigned long")
    is32(s, "unsigned short")
    return 1;
}
===
gcc -O3 -DHAVE_HIDDEN ztest99817.c -o ztest99817
Looking for a four-byte integer type... Found.

ALL = static shared
AR = /usr/bin/libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.7
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.7.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.7
Z_U4 = unsigned
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure CFLAGS=-arch i386
Tue Feb 19 17:44:31 CET 2013
./configure --help for help
--------------------
./configure --help
Tue Feb 19 17:44:46 CET 2013
usage:
  configure [--zprefix] [--prefix=PREFIX]  [--eprefix=EXPREFIX]
    [--static] [--64] [--libdir=LIBDIR] [--sharedlibdir=LIBDIR]
    [--includedir=INCLUDEDIR] [--archs="-arch i386 -arch x86_64"]
--------------------
./configure
Tue Feb 19 17:45:01 CET 2013

Checking for gcc...
=== ztest139.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c -O3 ztest139.c
... using gcc

Checking for shared library support...
=== ztest139.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest139.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.7 -O3 -fPIC -o ztest139.dylib ztest139.o
Building shared library libz.1.2.7.dylib with gcc.


=== ztest139.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest139.c
ztest139.c:2: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘dummy’
(exit code 1)
Checking for off64_t... No.

=== ztest139.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest139 ztest139.c
Checking for fseeko... Yes.

=== ztest139.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest139 ztest139.c
Checking for strerror... Yes.

=== ztest139.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest139.c
Checking for unistd.h... Yes.

=== ztest139.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest139.c
Checking for stdarg.h... Yes.

=== ztest139.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest139.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest139.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest139 ztest139.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest139.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest139.c
Checking for return value of vsnprintf()... Yes.

=== ztest139.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest139.c
Checking for attribute(visibility) support... Yes.

=== ztest139.c ===
#include <stdio.h>
#define is32(n,t) for(n=1,k=0;n;n<<=1,k++);if(k==32){puts(t);return 0;}
int main() {
    int k;
    unsigned i;
    unsigned long l;
    unsigned short s;
    is32(i, "unsigned")
    is32(l, "unsigned long")
    is32(s, "unsigned short")
    return 1;
}
===
gcc -O3 -DHAVE_HIDDEN ztest139.c -o ztest139
Looking for a four-byte integer type... Found.

ALL = static shared
AR = /usr/bin/libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.7
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.7.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.7
Z_U4 = unsigned
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure --help
Tue Feb 19 17:45:35 CET 2013
usage:
  configure [--zprefix] [--prefix=PREFIX]  [--eprefix=EXPREFIX]
    [--static] [--64] [--libdir=LIBDIR] [--sharedlibdir=LIBDIR]
    [--includedir=INCLUDEDIR] [--archs="-arch i386 -arch x86_64"]
--------------------
./configure --archs=-arch i386 -arch x86_64
Tue Feb 19 17:45:58 CET 2013

Checking for gcc...
=== ztest1078.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c -O3 ztest1078.c
... using gcc

Checking for shared library support...
=== ztest1078.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -arch i386 -arch x86_64 -fPIC ztest1078.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.7 -O3 -arch i386 -arch x86_64 -fPIC -o ztest1078.dylib ztest1078.o
Building shared library libz.1.2.7.dylib with gcc.


=== ztest1078.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -arch i386 -arch x86_64 -D_LARGEFILE64_SOURCE=1 ztest1078.c
ztest1078.c:2: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘dummy’
ztest1078.c:2: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘dummy’
lipo: can't figure out the architecture type of: /var/folders/my/rsjv5m457_j955p9gy3v3txc0000gs/T//ccqhj66X.out
(exit code 1)
Checking for off64_t... No.

=== ztest1078.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -arch i386 -arch x86_64 -o ztest1078 ztest1078.c
Checking for fseeko... Yes.

=== ztest1078.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -arch i386 -arch x86_64 -o ztest1078 ztest1078.c
Checking for strerror... Yes.

=== ztest1078.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -arch i386 -arch x86_64 ztest1078.c
Checking for unistd.h... Yes.

=== ztest1078.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -arch i386 -arch x86_64 ztest1078.c
Checking for stdarg.h... Yes.

=== ztest1078.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -arch i386 -arch x86_64 ztest1078.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1078.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -arch i386 -arch x86_64 -o ztest1078 ztest1078.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1078.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -arch i386 -arch x86_64 ztest1078.c
Checking for return value of vsnprintf()... Yes.

=== ztest1078.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -arch i386 -arch x86_64 ztest1078.c
Checking for attribute(visibility) support... Yes.

=== ztest1078.c ===
#include <stdio.h>
#define is32(n,t) for(n=1,k=0;n;n<<=1,k++);if(k==32){puts(t);return 0;}
int main() {
    int k;
    unsigned i;
    unsigned long l;
    unsigned short s;
    is32(i, "unsigned")
    is32(l, "unsigned long")
    is32(s, "unsigned short")
    return 1;
}
===
gcc -O3 -arch i386 -arch x86_64 -DHAVE_HIDDEN ztest1078.c -o ztest1078
Looking for a four-byte integer type... Found.

ALL = static shared
AR = /usr/bin/libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -arch i386 -arch x86_64 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS = -arch i386 -arch x86_64
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.7
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -arch i386 -arch x86_64 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.7.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.7
Z_U4 = unsigned
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure --help
Wed Feb 20 09:25:51 CET 2013
usage:
  configure [--zprefix] [--prefix=PREFIX]  [--eprefix=EXPREFIX]
    [--static] [--64] [--libdir=LIBDIR] [--sharedlibdir=LIBDIR]
    [--includedir=INCLUDEDIR] [--archs="-arch i386 -arch x86_64"]
--------------------
./configure --archs=-arch i386 -arch x86_64
Wed Feb 20 09:26:48 CET 2013

Checking for gcc...
=== ztest6523.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c -O3 ztest6523.c
... using gcc

Checking for shared library support...
=== ztest6523.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -arch i386 -arch x86_64 -fPIC ztest6523.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.7 -O3 -arch i386 -arch x86_64 -fPIC -o ztest6523.dylib ztest6523.o
Building shared library libz.1.2.7.dylib with gcc.


=== ztest6523.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -arch i386 -arch x86_64 -D_LARGEFILE64_SOURCE=1 ztest6523.c
ztest6523.c:2: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘dummy’
ztest6523.c:2: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘dummy’
lipo: can't figure out the architecture type of: /var/folders/my/rsjv5m457_j955p9gy3v3txc0000gs/T//ccm0B6he.out
(exit code 1)
Checking for off64_t... No.

=== ztest6523.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -arch i386 -arch x86_64 -o ztest6523 ztest6523.c
Checking for fseeko... Yes.

=== ztest6523.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -arch i386 -arch x86_64 -o ztest6523 ztest6523.c
Checking for strerror... Yes.

=== ztest6523.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -arch i386 -arch x86_64 ztest6523.c
Checking for unistd.h... Yes.

=== ztest6523.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -arch i386 -arch x86_64 ztest6523.c
Checking for stdarg.h... Yes.

=== ztest6523.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -arch i386 -arch x86_64 ztest6523.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest6523.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -arch i386 -arch x86_64 -o ztest6523 ztest6523.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest6523.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -arch i386 -arch x86_64 ztest6523.c
Checking for return value of vsnprintf()... Yes.

=== ztest6523.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -arch i386 -arch x86_64 ztest6523.c
Checking for attribute(visibility) support... Yes.

=== ztest6523.c ===
#include <stdio.h>
#define is32(n,t) for(n=1,k=0;n;n<<=1,k++);if(k==32){puts(t);return 0;}
int main() {
    int k;
    unsigned i;
    unsigned long l;
    unsigned short s;
    is32(i, "unsigned")
    is32(l, "unsigned long")
    is32(s, "unsigned short")
    return 1;
}
===
gcc -O3 -arch i386 -arch x86_64 -DHAVE_HIDDEN ztest6523.c -o ztest6523
Looking for a four-byte integer type... Found.

ALL = static shared
AR = /usr/bin/libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -arch i386 -arch x86_64 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS = -arch i386 -arch x86_64
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.7
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -arch i386 -arch x86_64 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.7.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.7
Z_U4 = unsigned
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


